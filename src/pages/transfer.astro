---
import MainLayout from "../features/MainLayout.astro";
import CoreAction from "../features/CoreAction.astro";
import InputNumber from "../features/InputNumber.astro";
import { TabsEnum } from "../components/Header"
import { Select } from "../components/Select"
import { getCli, getAccounts, Transfer, saveTransfer, Account } from "../client/fintrack";


const isPost = Astro.request.method === "POST"
const urlCookie = Astro.cookies.get("fintrackApiUrl").value
const tokenCookie = Astro.cookies.get("fintrackApiToken").value


if (urlCookie == undefined || tokenCookie == undefined) {
	return Astro.redirect("/")
}

const cli = getCli(urlCookie, tokenCookie)

if (isPost) {
	const t = await Astro.request.formData()
	const value = t.get("value")
	const fromAccountId = t.get("fromAccountId")
	const toAccountId = t.get("toAccountId")

	if (fromAccountId && toAccountId) {
		const v = value ? parseFloat(value.toString().replace('â‚¬ ', '')) : 0;
		const transfer: Transfer = {
			value: v,
			fromAccountId: fromAccountId.toString(),
			toAccountId: toAccountId.toString(),
		}

		await saveTransfer(cli, transfer);
		return Astro.redirect('/transfer?success=true')
	}
}

const accountCookie = Astro.cookies.get("fintrackAccounts")
const hasCacheAccount = !!accountCookie.value
const {accountCache}: Record<string, Account[]>= hasCacheAccount ? accountCookie.json() : {};
const accounts = hasCacheAccount ? accountCache : await getAccounts(cli);

if (!hasCacheAccount) {
	Astro.cookies.set("fintrackAccounts", { accountCache: accounts })
}
---

<MainLayout alertMessage="Transfer done with success!" tab={TabsEnum.Transfer}>
	<CoreAction cta="Transfer">
		<InputNumber />
		<Select label="From" name="fromAccountId">
			{
				accounts.map(({ id, name }) => (
					<option value={id}>{name}</option>
				))
			}
		</Select>
		<Select label="To" name="toAccountId">
			{
				accounts.map(({ id, name }) => (
					<option value={id}>{name}</option>
				))
			}
		</Select>
	</CoreAction>
</MainLayout>