---
import { Header, TabsEnum } from "../components/Header"
import { TextField } from "../components/TextField"
import { Select } from "../components/Select"
import { getCli, getAccounts, Transfer, saveTransfer } from "../client/fintrack";
import { OpButton } from "../components/OpButton";

const isPost = Astro.request.method === "POST"
const urlCookie = Astro.cookies.get("fintrackApiUrl").value
const tokenCookie = Astro.cookies.get("fintrackApiToken").value


if (urlCookie == undefined || tokenCookie == undefined) {
	return Astro.redirect("/")
}

const cli = getCli(urlCookie, tokenCookie)

if (isPost) {
	const t = await Astro.request.formData()
	const value = t.get("value")
	const fromAccountId = t.get("fromAccountId")
	const toAccountId = t.get("toAccountId")

	if (fromAccountId && toAccountId) {
		const transfer: Transfer = {
			value: value ? parseFloat(value.toString().replace(',', '.')) : 0,
			fromAccountId: fromAccountId.toString(),
			toAccountId: toAccountId.toString(),
		}

		await saveTransfer(cli, transfer);
		return Astro.redirect('/transfer')
	}
}

const accounts = await getAccounts(cli);
---
<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Astro</title>
	</head>
	<body class="bg-slate-100 min-h-[100dvh]">
		<Header value={TabsEnum.Transfer} />
		<form class="max-w-xs mx-auto flex flex-col gap-8 mt-10" method="post">
            <TextField label="Value" name="value" placeholder="99,99" pattern="[0-9]*" inputMode="decimal" step=".01" />
			<Select label="From" name="fromAccountId">
				{
					accounts.map(({ id, name }) => (
						<option value={id}>{name}</option>
					))
				}
			</Select>
            <Select label="To" name="toAccountId">
				{
					accounts.map(({ id, name }) => (
						<option value={id}>{name}</option>
					))
				}
			</Select>
			<div class="absolute bottom-0 left-0 w-full p-7 flex gap-5 bg-white shadow-md">
				<button id="submit" class="flex-1 rounded-md outline-none text-md p-4 w-full bg-teal-600 text-white shadow-md">
					Transfer
				</button>
			</div>
		</form>
	</body>
</html>

<script>
	const button = document.getElementById("submit") as HTMLButtonElement;

	button?.addEventListener("click", function () {
		setTimeout(() => {
			this.disabled = true;
			this.classList.add("bg-teal-800")
			this.textContent = "ðŸ’¸ ðŸ’¸ ðŸ’¸"
		}, 50)
	})

</script>